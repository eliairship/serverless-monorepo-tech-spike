# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: eliunosquare
# "service" is the name of this project. This will also be added to your AWS resource names.
service: shared

provider:
  name: aws

resources:
  - ${file(resources/cognito.yml)}
  - ${file(resources/api-key-table.yml)}
  # Resources:
  #   apiKeyTable:
  #     Type: AWS::DynamoDB::Table
  #     Properties:
  #       TableName: apiKeyTable-${sls:stage}
  #       AttributeDefinitions:
  #         - AttributeName: apiKey
  #           AttributeType: S
  #       KeySchema:
  #         - AttributeName: apiKey
  #           KeyType: HASH
  #       ProvisionedThroughput:
  #         ReadCapacityUnits: 1000
  #         WriteCapacityUnits: 1000
  #   # TODO: ADD Cognito
    
  #   portalUserPool:
  #     Type: AWS::Cognito::UserPool
  #     Properties:
  #       # Generate a name based on the stage
  #       UserPoolName: ${sls:stage}-portal-user-pool
  #       AccountRecoverySetting:
  #         RecoveryMechanisms:
  #           - Name: verified_email
  #             Priority: 1
  #       AdminCreateUserConfig:
  #         AllowAdminCreateUserOnly: false
  #       # CaseSensitive: false
  #       # SelfSignUpEnabled: true
  #       UsernameAttributes:
  #         - email
  #       AutoVerifiedAttributes:
  #         - email
  #       UsernameConfiguration:
  #         CaseSensitive: false
  #       Schema:
  #         - AttributeDataType: String
  #           Mutable: true
  #           Name: account_id
  #           StringAttributeConstraints:
  #             MaxLength: "255"
  #             MinLength: "1"
  #         - AttributeDataType: String
  #           Mutable: false
  #           Name: threeScaleUserId
  #           StringAttributeConstraints:
  #             MaxLength: "255"
  #             MinLength: "0"
  #         - AttributeDataType: String
  #           Mutable: false
  #           Name: threeScaleUserName
  #           StringAttributeConstraints:
  #             MaxLength: "255"
  #             MinLength: "0"
  #         - AttributeDataType: String
  #           Mutable: false
  #           Name: threeScaleCreatedAt
  #           StringAttributeConstraints:
  #             MaxLength: "24"
  #             MinLength: "0"
  #     UpdateReplacePolicy: Retain
  #     DeletionPolicy: Retain

  #   portalUserPoolClient:
  #     Type: AWS::Cognito::UserPoolClient
  #     Properties:
  #       # Generate an app client name based on the stage
  #       ClientName: ${sls:stage}-portal-user-pool-client
  #       UserPoolId:
  #         Ref: portalUserPool
  #       GenerateSecret: false
  #       # AllowedOAuthFlows:
  #       #   - implicit
  #       #   - code
  #       # AllowedOAuthFlowsUserPoolClient: true
  #       # AllowedOAuthScopes:
  #       #   - profile
  #       #   - phone
  #       #   - email
  #       #   - openid
  #       #   - aws.cognito.signin.user.admin
  #       ReadAttributes:
  #         - custom:account_id
  #         - email
  #         - email_verified
  #       SupportedIdentityProviders:
  #         - COGNITO
  #   portalIdentityPool:
  #     Type: AWS::Cognito::IdentityPool
  #     Properties:
  #       AllowUnauthenticatedIdentities: false
  #       CognitoIdentityProviders:
  #         - ClientId:
  #             Ref: portalUserPoolClient
  #           ProviderName:
  #             Fn::GetAtt:
  #               - portalUserPool
  #               - ProviderName
    
  #   SuperAdminsGroup:
  #     Type: AWS::Cognito::UserPoolGroup
  #     Properties:
  #       GroupName: super-admins-group
  #       UserPoolId:
  #         Ref: portalUserPool

  #   IPHoldersGroup:
  #     Type: AWS::Cognito::UserPoolGroup
  #     Properties:
  #       GroupName: ip-holders-group
  #       UserPoolId:
  #         Ref: portalUserPool
    
  #   # TODO: ADD RDS

  # Outputs:
  #   apiKeyTableName:
  #     Value: !Ref apiKeyTable
  #   UserPoolId:
  #     Value: !Ref portalUserPool

  #   UserPoolClientId:
  #     Value:
  #       Ref: portalUserPoolClient

  #   CognitoIdentityPool:
  #     Value:
  #       Ref: portalIdentityPool